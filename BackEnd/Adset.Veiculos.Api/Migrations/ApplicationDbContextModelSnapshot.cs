// <auto-generated />
using Adset.Veiculos.Infraestrutura.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adset.Veiculos.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidade.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.ItemOpicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItensOpicionais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ar Condicionado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Alarme"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Airbag"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Freio ABS"
                        });
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.VeiculoFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("VeiculoFotos");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.VeiculoOpicional", b =>
                {
                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<int>("IdItemOpicional")
                        .HasColumnType("int");

                    b.HasKey("IdVeiculo", "IdItemOpicional");

                    b.HasIndex("IdItemOpicional");

                    b.ToTable("VeiculoOpicionais");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.VeiculoPortalPacote", b =>
                {
                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<int>("Portal")
                        .HasColumnType("int");

                    b.Property<int>("Pacote")
                        .HasColumnType("int");

                    b.HasKey("IdVeiculo", "Portal", "Pacote");

                    b.HasIndex("IdVeiculo", "Portal")
                        .IsUnique();

                    b.ToTable("VeiculoPortalPacotes");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.VeiculoFoto", b =>
                {
                    b.HasOne("Adset.Veiculos.Dominio.Entidade.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.VeiculoOpicional", b =>
                {
                    b.HasOne("Adset.Veiculos.Dominio.Entidades.ItemOpicional", "ItemOpicional")
                        .WithMany("VeiculoOpicionais")
                        .HasForeignKey("IdItemOpicional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adset.Veiculos.Dominio.Entidade.Veiculo", "Veiculo")
                        .WithMany("Opcionais")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemOpicional");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.VeiculoPortalPacote", b =>
                {
                    b.HasOne("Adset.Veiculos.Dominio.Entidade.Veiculo", "Veiculo")
                        .WithMany("PortalPacotes")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidade.Veiculo", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Opcionais");

                    b.Navigation("PortalPacotes");
                });

            modelBuilder.Entity("Adset.Veiculos.Dominio.Entidades.ItemOpicional", b =>
                {
                    b.Navigation("VeiculoOpicionais");
                });
#pragma warning restore 612, 618
        }
    }
}
